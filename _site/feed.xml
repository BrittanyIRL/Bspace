<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-12T22:18:40-07:00</updated><id>http://localhost:4000/</id><title type="html">BrittanyIRL</title><subtitle>The blog of Brittany Feenstra (Brassell). Featuring subjects like front-end web development, music, general word vomit life updates, and any other darn thing of her choosing.</subtitle><entry><title type="html">Javascript and Set Intervals</title><link href="http://localhost:4000/code/2018/05/12/set-intervals-countdown.html" rel="alternate" type="text/html" title="Javascript and Set Intervals" /><published>2018-05-12T10:40:29-07:00</published><updated>2018-05-12T10:40:29-07:00</updated><id>http://localhost:4000/code/2018/05/12/set-intervals-countdown</id><content type="html" xml:base="http://localhost:4000/code/2018/05/12/set-intervals-countdown.html">&lt;p&gt;This past week I was discussing with a coworker about how I feel like jQuery has made me extremely lazy as a developer, that same day I was also spinning up a possible new checkout process and needed some functionality to have a timer counting down until the cart expired. I thought to myself that this is the perfect chance to skip the jQuery and just use “vanilla” Javascript instead. With the way the frontend world is moving with things like React and Angular and Typescript and ES6 - jQuery isn’t really that necessary to speed development anymore, and using it will make the code we write more tedious to update to newer frameworks when the day comes to update, which it always does.&lt;/p&gt;

&lt;p&gt;Building the timer meant dusting off more cobwebs than I’d like to admit - however, coding is like working out - if you don’t strengthen and stretch those particular muscles then it’s going to be a little harder, doesn’t mean that the muscle memory isn’t there or that building the new metaphorical muscles isn’t impossible. So, today, off the clock from my job I put myself back to the task to make a reusable countdown timer that I could just import into my script and call it a day, but potentially use for other purposes also. There’s absolutely room to expand this and that’s a good thing!&lt;/p&gt;

&lt;p&gt;Let’s start with the function &lt;code class=&quot;highlighter-rouge&quot;&gt;startCountDown&lt;/code&gt;, this is the function fired on &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;. In it we’re passed the id which is what we’ll use to render an updated countdown to the DOM, the specific end date we’re looking for (which is the date time stamp from when the parent function is triggered) and an array of what time sections to show - so days, hours, minutes, seconds.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let startCountDown = (id, endDate, displayArray) =&amp;gt; {
  let now = new Date().getTime();
  let distance = endDate - now;
  let times = {
    days : Math.floor(distance / (1000 * 60 * 60 * 24)),
    hours : Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),
    minutes : Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),
    seconds : Math.floor((distance % (1000 * 60)) / 1000)
  }

  let display = [];
  for (let i = 0; i &amp;lt; displayArray.length; i++){
    display.push(`${times[displayArray[i]]}`, `${capitalizeFirstLetter(displayArray[i].slice(0,3))}`);
  }

  document.getElementById(id).innerHTML = display.join(&quot; &quot;);

  if (distance &amp;lt; 0) {
   clearInterval(countDown);
    document.getElementById(id).innerHTML = &quot;EXPIRED&quot;;
  }
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We find the difference between the passed in endDate parameter and the date time of the current moment and use that &lt;code class=&quot;highlighter-rouge&quot;&gt;distance&lt;/code&gt; to calculate the time between the &lt;code class=&quot;highlighter-rouge&quot;&gt;now&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;endDate&lt;/code&gt;. I lifted these calculations straight from MDN, I see no need to recreate the wheel when math is math is math.&lt;/p&gt;

&lt;p&gt;Then, because I want this code to be reusable I’m looping through the passed in &lt;code class=&quot;highlighter-rouge&quot;&gt;displayArray&lt;/code&gt; to grab the matching &lt;code class=&quot;highlighter-rouge&quot;&gt;times&lt;/code&gt; object keys and only rendering those sections of that object. My specific want for this was a 15 minute timer, but I really don’t want to have to make this whole thing again if I suddenly need a timer for 5 days and 3 hours, this gives me the ability to be flexible.&lt;/p&gt;

&lt;p&gt;So then, we render the contents of &lt;code class=&quot;highlighter-rouge&quot;&gt;display&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And finish by checking to see if the &lt;code class=&quot;highlighter-rouge&quot;&gt;distance&lt;/code&gt; is 0 or less (never gonna happen) and when it is, we clear the interval so that the timer will stop. Here we could add an alert or a redirect. It’s probably a great spot to add an additional param passed through to &lt;code class=&quot;highlighter-rouge&quot;&gt;startCountDown&lt;/code&gt; with a clearFunction that is triggered within this if block so that it’s truly reusable.
An iteresting thing I learned doing this in es6 - because I bound &lt;code class=&quot;highlighter-rouge&quot;&gt;startCountDown&lt;/code&gt; to be able to pass in some variables I actually have to clear the interval from &lt;em&gt;within&lt;/em&gt; the setInterval because of the scope of &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;.  More on that &lt;a href=&quot;https://stackoverflow.com/questions/457826/pass-parameters-in-setinterval-function&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The function I’m actually calling to initiate this thing is called &lt;code class=&quot;highlighter-rouge&quot;&gt;coundDownClock&lt;/code&gt;, here I’m setting whatever the id for the element I want to show the timer results in, the total time to elapse (which right now is just minutes, but this could be adjusted) and an array with strings for what parts of time to display - it’s important that these strings match the time keys in the &lt;code class=&quot;highlighter-rouge&quot;&gt;startCountDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;countDownClock&lt;/code&gt; we grab this moment date and then getMinutes and add the timeToElapse to it (this is where that whole, it could be adjusted for _non_minutes comes in, or you could do this setting of the endDate outside of &lt;code class=&quot;highlighter-rouge&quot;&gt;countDownClock&lt;/code&gt; so it’s a mute point).  Then you just call &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;countDownClock&lt;/code&gt; and all is done.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const countDownClock = (id, timeToElapse, displayArray) =&amp;gt; {
  // establish start time from a date instance and then set the count we're looking for
  let endDate = new Date();
  endDate.getTime();
  endDate.setMinutes(endDate.getMinutes() + timeToElapse); // if you wanted to do something other than minutes this would need to be adapted
  setInterval(startCountDown.bind(this, id, endDate, displayArray), 1000);
}

let containerId = &quot;countdown&quot;;
let timeToElapse = 15; // whole numbers only, how long the timer is going for
let displayArray = ['minutes', 'seconds']; // parts of time to render on screen

countDownClock(containerId, timeToElapse , displayArray);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Honestly, it’s not that complicated but it’s easy to get stuck when you let yourself write jQuery. Again, it’s like watching that 3rd episode of Buffy for the evening vs getting up and taking your puppy for a walk or going for a run. All good things take practice and the basics are never something we should stop practicing.&lt;/p&gt;

&lt;p&gt;So here’s to foundations, and committing to building better iterations of ourselves.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://codepen.io/brittanyIRL/pen/MGXwoy&quot;&gt;View full code on codepen&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="code" /><summary type="html">This past week I was discussing with a coworker about how I feel like jQuery has made me extremely lazy as a developer, that same day I was also spinning up a possible new checkout process and needed some functionality to have a timer counting down until the cart expired. I thought to myself that this is the perfect chance to skip the jQuery and just use “vanilla” Javascript instead. With the way the frontend world is moving with things like React and Angular and Typescript and ES6 - jQuery isn’t really that necessary to speed development anymore, and using it will make the code we write more tedious to update to newer frameworks when the day comes to update, which it always does.</summary></entry><entry><title type="html">Best of 2017</title><link href="http://localhost:4000/lists/2017/12/29/top-10s-of-2017.html" rel="alternate" type="text/html" title="Best of 2017" /><published>2017-12-29T15:00:00-07:00</published><updated>2017-12-29T15:00:00-07:00</updated><id>http://localhost:4000/lists/2017/12/29/top-10s-of-2017</id><content type="html" xml:base="http://localhost:4000/lists/2017/12/29/top-10s-of-2017.html">&lt;h3 id=&quot;albums&quot;&gt;Albums&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Cut Copy - Haiku from Zero&lt;/li&gt;
  &lt;li&gt;Arcade Fire - Everything Now&lt;/li&gt;
  &lt;li&gt;The Killers - Wonderful, Wonderful&lt;/li&gt;
  &lt;li&gt;Bleachers - Gone Now&lt;/li&gt;
  &lt;li&gt;Poolside - Heat&lt;/li&gt;
  &lt;li&gt;The XX - I see You&lt;/li&gt;
  &lt;li&gt;LCD Sounsystem - American Dream&lt;/li&gt;
  &lt;li&gt;Wolf Parade - Cry, Cry, Cry&lt;/li&gt;
  &lt;li&gt;Blade Runner 2049 Soundtrack&lt;/li&gt;
  &lt;li&gt;Alvvays - Antisocialites&lt;/li&gt;
  &lt;li&gt;Fast &amp;amp; Furious - Fate of the Furious&lt;/li&gt;
  &lt;li&gt;Charli XCX - Number 1 Angel&lt;/li&gt;
  &lt;li&gt;Dude York - Sincerely&lt;/li&gt;
  &lt;li&gt;Blondie - Pollinator&lt;/li&gt;
  &lt;li&gt;Gorillaz - Humanz&lt;/li&gt;
  &lt;li&gt;King Krule - The Ooz&lt;/li&gt;
  &lt;li&gt;Gucci Mane - Mr. Davis&lt;/li&gt;
  &lt;li&gt;Tyler, The Creator - Flower Boy&lt;/li&gt;
  &lt;li&gt;Future Islands - Far Field&lt;/li&gt;
  &lt;li&gt;Ibeyi - Ash&lt;/li&gt;
  &lt;li&gt;Stormzy - Gang Signs &amp;amp; Prayer&lt;/li&gt;
  &lt;li&gt;Ariel Pink - Dedicated to Bobby Jameson&lt;/li&gt;
  &lt;li&gt;Ty Dolla $ign - Beach House 3&lt;/li&gt;
  &lt;li&gt;Nine Inch Nails - Add Violence&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;singles&quot;&gt;Singles&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;MGMT - Little Dark Age&lt;/li&gt;
  &lt;li&gt;Fischerspooner - Have Fun Tonight&lt;/li&gt;
  &lt;li&gt;Chromeo - Juice&lt;/li&gt;
  &lt;li&gt;Charli XCX - Boys&lt;/li&gt;
  &lt;li&gt;Migos - Motor Sport&lt;/li&gt;
  &lt;li&gt;Havana - Camila Cabello&lt;/li&gt;
  &lt;li&gt;Selena Gomez - Fetish (ft. Gucci Mane)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;movies&quot;&gt;Movies&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Bladerunner 2049&lt;/li&gt;
  &lt;li&gt;Valerian&lt;/li&gt;
  &lt;li&gt;Star Wars : The Last Jedi&lt;/li&gt;
  &lt;li&gt;Get Out&lt;/li&gt;
  &lt;li&gt;Baby Driver&lt;/li&gt;
  &lt;li&gt;The Disaster Artist&lt;/li&gt;
  &lt;li&gt;IT&lt;/li&gt;
  &lt;li&gt;Lego Batman&lt;/li&gt;
  &lt;li&gt;Kong: Skull Island&lt;/li&gt;
  &lt;li&gt;Fast and Furious : Fate of the Furious&lt;/li&gt;
  &lt;li&gt;XXX : Return of Xander Cage&lt;/li&gt;
  &lt;li&gt;Underworld : Blood Wars&lt;/li&gt;
  &lt;li&gt;Baywatch&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="lists" /><summary type="html">Albums Cut Copy - Haiku from Zero Arcade Fire - Everything Now The Killers - Wonderful, Wonderful Bleachers - Gone Now Poolside - Heat The XX - I see You LCD Sounsystem - American Dream Wolf Parade - Cry, Cry, Cry Blade Runner 2049 Soundtrack Alvvays - Antisocialites Fast &amp;amp; Furious - Fate of the Furious Charli XCX - Number 1 Angel Dude York - Sincerely Blondie - Pollinator Gorillaz - Humanz King Krule - The Ooz Gucci Mane - Mr. Davis Tyler, The Creator - Flower Boy Future Islands - Far Field Ibeyi - Ash Stormzy - Gang Signs &amp;amp; Prayer Ariel Pink - Dedicated to Bobby Jameson Ty Dolla $ign - Beach House 3 Nine Inch Nails - Add Violence</summary></entry><entry><title type="html">Seattle to Phoenix</title><link href="http://localhost:4000/life/2017/01/20/sea-to-phx.html" rel="alternate" type="text/html" title="Seattle to Phoenix" /><published>2017-01-20T14:40:29-07:00</published><updated>2017-01-20T14:40:29-07:00</updated><id>http://localhost:4000/life/2017/01/20/sea-to-phx</id><content type="html" xml:base="http://localhost:4000/life/2017/01/20/sea-to-phx.html">&lt;p&gt;Saying goodbye is hard, but it’s a lot easier when you take your #1 person with you and you have walkie talkies on your 1500 mile trip down the coast.&lt;/p&gt;

&lt;p&gt;I decided to document our move from Seattle, the place both of us have called home for the past 8 years - where we did so much growing up and becoming of who we are. I think it’s important to recognize the places and people we have been to fully embrace the present and pursue the future - this is simply me capturing part of that pursuit. Moves are stressful, but if you treat it as a new adventure it’s actually pretty fun.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/274/32414935761_330e4d78f3_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Packing up in Seattle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/308/32385172192_f3145402a1_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Last night in Seattle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/553/32414932251_c93d455f29_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Last night in Seattle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/407/32385169432_e9bd2e7638_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Stopping over in Weed, CA - night 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/401/32385167002_92bfb04344_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Stopping over in Weed, CA - night 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/292/32385163692_e1c54db28f_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Stopping over in Weed, CA - night 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/570/32385160682_3cf18e3c60_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Stopping over in Weed, CA - night 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/341/31725680013_3cc7200e55_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Too early to be up, on the move again&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/532/32385157062_ac136a5b84_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Too early to be up, on the move again&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/4/3948/33179428815_155b759526_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Palm Springs, CA - day 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2867/33137632526_6ef226ddca_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Palm Springs, CA - parking lot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/291/31725677233_2d0be00758_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Morning in Palm Springs, CA - day 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/618/32385154832_800663fb85_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Palm Springs, CA - parking lot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/604/32537763155_205f6a81c3_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Getting Fuel - day 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/530/31693965784_cd73c1892d_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Caravan view - finally in Arizona&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2814/33179425685_d262443155_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Taking a moment before unpacking, Gerrit's parents met us with wine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2948/33137631376_7185db9269_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Unpacking, Phoenix&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/4/3706/32364076113_4221cfe7b7_z.jpg&quot; alt=&quot;alt text&quot; title=&quot;Unpacking, Phoenix&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="life" /><summary type="html">Saying goodbye is hard, but it’s a lot easier when you take your #1 person with you and you have walkie talkies on your 1500 mile trip down the coast.</summary></entry><entry><title type="html">B’s Personal Cheat Sheet To Markdown Language</title><link href="http://localhost:4000/code/2016/11/30/markdown.html" rel="alternate" type="text/html" title="B's Personal Cheat Sheet To Markdown Language" /><published>2016-11-30T14:40:29-07:00</published><updated>2016-11-30T14:40:29-07:00</updated><id>http://localhost:4000/code/2016/11/30/markdown</id><content type="html" xml:base="http://localhost:4000/code/2016/11/30/markdown.html">&lt;p&gt;One of the things that drew my into learning how Jekyll’s CMS works is that it uses markdown for all the posts. While this isn’t practical for a client to do when you hand over the reigns, it’s a really fun excercise for myself. And will help spruce up my future github readmes.&lt;/p&gt;

&lt;p&gt;All these posts are in markdown! Since Jekyll is the programmer’s CMS it takes out some of the GUI that things like wordpress let you rely on in terms of your page structure.&lt;/p&gt;

&lt;p&gt;This is all google-able, but for my own santity and practice I want all the markdown used for my posts to be collected and tracked in one spot. So, as I evolve the site, I’ll update this post to document how I’m writing posts.&lt;/p&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;# H1&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;h1&quot;&gt;H1&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;## H2&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;h2&quot;&gt;H2&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;### H3&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;h3&quot;&gt;H3&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#### H4&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;h4&quot;&gt;H4&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;##### H5&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;h5&quot;&gt;H5&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;###### H6&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;h6&quot;&gt;H6&lt;/h6&gt;

&lt;h2 id=&quot;emphasis&quot;&gt;Emphasis&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*italics* or _italics_&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;asterisks&lt;/em&gt; or &lt;em&gt;underscore&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**bold** or __bold__&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;asterisks&lt;/strong&gt; or &lt;strong&gt;underscore&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~~strike through~~&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;strike through&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;p&gt;`1. ordered list item&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;numbers do not matter, they update on their own
    &lt;ul&gt;
      &lt;li&gt;Sub item, unordered&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;another list item&lt;/li&gt;
  &lt;li&gt;sub item, ordered&lt;/li&gt;
  &lt;li&gt;another sub item, ordered&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;intended paragraph under a list item&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;another list item&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;unordered list&lt;/li&gt;
  &lt;li&gt;unordered list&lt;/li&gt;
  &lt;li&gt;unordered list 
 `&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;First ordered list item&lt;/li&gt;
  &lt;li&gt;Another item
    &lt;ul&gt;
      &lt;li&gt;Unordered sub-list.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Actual numbers don’t matter, just that it’s a number&lt;/li&gt;
  &lt;li&gt;Ordered sub-list&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And another item.&lt;/p&gt;

    &lt;p&gt;You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).&lt;/p&gt;

    &lt;p&gt;To have a line break without a paragraph, you will need to use two trailing spaces.
Note that this line is separate, but within the same paragraph.
(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Unordered list can use asterisks&lt;/li&gt;
  &lt;li&gt;Or minuses&lt;/li&gt;
  &lt;li&gt;Or pluses&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[inline-style link with title](https://www.google.com &quot;Google's Homepage&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.google.com&quot; title=&quot;Google's Homepage&quot;&gt;inline-style link with title&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[relative links](../blob/master/LICENSE)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../blob/master/LICENSE&quot;&gt;relative links&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;p&gt;Inline-style:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![alt text](https://media.giphy.com/media/UkhHIZ37IDRGo/giphy.gif &quot;Andy from Parks and Rec&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/UkhHIZ37IDRGo/giphy.gif&quot; alt=&quot;alt text&quot; title=&quot;Andy from Parks and Rec&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reference-style:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![alt text][creep]
[creep]: https://media.giphy.com/media/CTWMRS2htKOac/giphy.gif &quot;Do the Creep&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/CTWMRS2htKOac/giphy.gif&quot; alt=&quot;alt text&quot; title=&quot;Do the Creep&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code-blocks&quot;&gt;Code Blocks:&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt;&amp;lt;p&amp;gt; code block &amp;lt;/p&amp;gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt; 
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt; code block &amp;lt;/p&amp;gt; &lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Haters are just people who haven’t quite figured out partying.” - Andrew WK&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;horizontal-rules&quot;&gt;Horizontal Rules&lt;/h2&gt;

&lt;p&gt;Three or more&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;thank you to &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#headers&quot; title=&quot;github&quot;&gt;adamp’s markdown cheats&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="code" /><summary type="html">One of the things that drew my into learning how Jekyll’s CMS works is that it uses markdown for all the posts. While this isn’t practical for a client to do when you hand over the reigns, it’s a really fun excercise for myself. And will help spruce up my future github readmes. [creep]: https://media.giphy.com/media/CTWMRS2htKOac/giphy.gif “Do the Creep”``` [creep]: https://media.giphy.com/media/CTWMRS2htKOac/giphy.gif “Do the Creep”</summary></entry><entry><title type="html">Jekyll + Github Project Page</title><link href="http://localhost:4000/code/2016/11/29/jekyll-and-github-project-page.html" rel="alternate" type="text/html" title="Jekyll + Github Project Page" /><published>2016-11-29T14:40:29-07:00</published><updated>2016-11-29T14:40:29-07:00</updated><id>http://localhost:4000/code/2016/11/29/jekyll-and-github-project-page</id><content type="html" xml:base="http://localhost:4000/code/2016/11/29/jekyll-and-github-project-page.html">&lt;p&gt;When I was setting this Jekyll site up I found a lot of documentation on how to configure it for use with User and Organization pages but not so much on project pages. The main difference in the set up happens in the &lt;em&gt;config.yml&lt;/em&gt; file.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Your jekyll project &lt;em&gt;must&lt;/em&gt; be in the root directory of the project if you are using a github pages &lt;em&gt;project&lt;/em&gt; to host your site. Jekyll talks about this, but I found it easy to miss in the combing of directions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In your config file you need to configure your url and base url like so:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl: &quot;/github-project-name&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;url: &quot;https://github-user-name.github.io&quot;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In your dynamic links, use the following as your base url: 
&lt;code class=&quot;highlighter-rouge&quot;&gt;site.github.url&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end, it really isn’t that complicated and leaves you thinking “wel that was easy”, but sifting through the various ways can be painful.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;When in doubt, consult the docs!&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="code" /><summary type="html">When I was setting this Jekyll site up I found a lot of documentation on how to configure it for use with User and Organization pages but not so much on project pages. The main difference in the set up happens in the config.yml file.</summary></entry><entry><title type="html">Top 10 albums of 2016</title><link href="http://localhost:4000/lists/2016/11/28/top-10-albums-of-2016.html" rel="alternate" type="text/html" title="Top 10 albums of 2016" /><published>2016-11-28T23:54:29-07:00</published><updated>2016-11-28T23:54:29-07:00</updated><id>http://localhost:4000/lists/2016/11/28/top-10-albums-of-2016</id><content type="html" xml:base="http://localhost:4000/lists/2016/11/28/top-10-albums-of-2016.html">&lt;ol&gt;
  &lt;li&gt;Savages - Adore Life&lt;/li&gt;
  &lt;li&gt;White Lies - Friends&lt;/li&gt;
  &lt;li&gt;Nada Surf - You Know Who You Are&lt;/li&gt;
  &lt;li&gt;Gucci Mane - Everybody Looking&lt;/li&gt;
  &lt;li&gt;The Lonely Island - Popstar: Never Stop Never Stopping&lt;/li&gt;
  &lt;li&gt;Head Wound City - A New Wave of Violence&lt;/li&gt;
  &lt;li&gt;Nice as F*ck - Nice as Fuck&lt;/li&gt;
  &lt;li&gt;Slaves - Take Control&lt;/li&gt;
  &lt;li&gt;Yeasayer - Amen &amp;amp; Goodbye&lt;/li&gt;
  &lt;li&gt;Trentemøller - Fixion&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;honorable-mentions&quot;&gt;Honorable Mentions:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Factory Floor - 25 25&lt;/li&gt;
  &lt;li&gt;Hinds - Leave Me Alone&lt;/li&gt;
  &lt;li&gt;Essaie Pas - Demain est une autre nuit&lt;/li&gt;
  &lt;li&gt;Yung Thug - (for the year in general)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="lists" /><summary type="html">Savages - Adore Life White Lies - Friends Nada Surf - You Know Who You Are Gucci Mane - Everybody Looking The Lonely Island - Popstar: Never Stop Never Stopping Head Wound City - A New Wave of Violence Nice as F*ck - Nice as Fuck Slaves - Take Control Yeasayer - Amen &amp;amp; Goodbye Trentemøller - Fixion</summary></entry><entry><title type="html">Turning 26</title><link href="http://localhost:4000/lists/2016/11/02/turning-26.html" rel="alternate" type="text/html" title="Turning 26" /><published>2016-11-02T14:40:29-07:00</published><updated>2016-11-02T14:40:29-07:00</updated><id>http://localhost:4000/lists/2016/11/02/turning-26</id><content type="html" xml:base="http://localhost:4000/lists/2016/11/02/turning-26.html">&lt;p&gt;Today is my 26th birthday. There’s alot that I’m really proud of about this year, some good milestones and things that I’ll always smile at when I think about them. It all makes me think about what I want to pursue this next year. Twenty-five was the year I officially called myself a web developer (the career I’d been pursuing in my nights and weekends for years) and it was the year I got married to the man of my dreams and my best friend! So newly wed + new career = alottttt going on. But all really good stuff. Now that things aren’t as new it’s time to think about what’s up next (though we all know plans are generally made to be broken).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Be intentional: With my husband, my friends, my family, my health&lt;/li&gt;
  &lt;li&gt;Release an app in the itunes store: I have a really cool idea I’m tinkering with&lt;/li&gt;
  &lt;li&gt;Learn to box: I want to be able to fight, not just run away&lt;/li&gt;
  &lt;li&gt;Get a dog and a hairless cat, raise them as a pack&lt;/li&gt;
  &lt;li&gt;Go somewhere new… often&lt;/li&gt;
  &lt;li&gt;Pick up running outdoors again&lt;/li&gt;
  &lt;li&gt;Take time to take care of myself: it just helps ya feel better, u know?&lt;/li&gt;
  &lt;li&gt;Finish books, not just start a billion&lt;/li&gt;
  &lt;li&gt;Learn something new with my hands&lt;/li&gt;
  &lt;li&gt;Start writing educational front end tutorials&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;HBD to me &amp;lt;3&lt;/p&gt;</content><author><name></name></author><category term="lists" /><summary type="html">Today is my 26th birthday. There’s alot that I’m really proud of about this year, some good milestones and things that I’ll always smile at when I think about them. It all makes me think about what I want to pursue this next year. Twenty-five was the year I officially called myself a web developer (the career I’d been pursuing in my nights and weekends for years) and it was the year I got married to the man of my dreams and my best friend! So newly wed + new career = alottttt going on. But all really good stuff. Now that things aren’t as new it’s time to think about what’s up next (though we all know plans are generally made to be broken).</summary></entry><entry><title type="html">Using SCSS with Jekyll</title><link href="http://localhost:4000/code/2016/10/16/using-scss-with-jekyll.html" rel="alternate" type="text/html" title="Using SCSS with Jekyll" /><published>2016-10-16T14:40:29-07:00</published><updated>2016-10-16T14:40:29-07:00</updated><id>http://localhost:4000/code/2016/10/16/using-scss-with-jekyll</id><content type="html" xml:base="http://localhost:4000/code/2016/10/16/using-scss-with-jekyll.html">&lt;p&gt;One of the great things about Jekyll is how easy it is to set up sass (or scss) within the project since it’s Ruby based.&lt;/p&gt;

&lt;p&gt;Here’s a few great articles I’ve followed:
&lt;a href=&quot;http://markdotto.com/2014/09/25/sass-and-jekyll/&quot;&gt;comprehensive and to the point - Mark Dotto’s blog&lt;/a&gt;
&lt;a href=&quot;http://blog.davepoon.net/2015/01/19/setting-up-sass-with-jekyll/&quot;&gt;thorough guide from Dave Poon&lt;/a&gt;
&lt;a href=&quot;http://garthdb.com/writings/i-am-a-jekyll-god/&quot;&gt;more of a high level philosophy…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These really help ya get up and running. If your pages aren’t showing up with their styles, make sure you have your &lt;a href=&quot;https://brittanyirl.github.io/code/2016/11/29/jekyll-and-github-project-page.html&quot;&gt;links set up correct&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personally, I have my scss set up to handle my includes (or partials), my general styles, and my overrides (because I’m using materializecss) - everything feeds into my css directory which compiles into the site directory.&lt;/p&gt;

&lt;p&gt;I could honestly play with scss structure all day long, and like that article from garthdb.com I linked you to up there - it’s interesting thinking about the ways structuring this well can speed up your site load and channel resources smarter. Since this blog is jekyll based and I’m the sole contributor - it’s safe to assume I’ll be playing with how this is set up as time goes on.&lt;/p&gt;

&lt;p&gt;Serious thanks to Mark Dotto and Dave Poon’s blogs for helping me wrap my head around this whole thing.&lt;/p&gt;</content><author><name></name></author><category term="code" /><summary type="html">One of the great things about Jekyll is how easy it is to set up sass (or scss) within the project since it’s Ruby based.</summary></entry></feed>